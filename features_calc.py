import math
import json

x10 = [241, 260, 304, 352, 384, 404, 443, 454, 453, 407, 395, 393, 407, 447, 475, 463, 445, 407, 392, 370, 365, 369, 381, 403, 435, 453, 499, 510, 454, 444, 405, 368, 356, 320, 287]
y10 = [-216,-248,-283,-310,-313,-313,-306,-291,-260,-197,-177,-153,-112,-95,-118, -147, -169,-191,-194,-207,-224,-250,-287,-321,-353,-366,-373,-351,-293,-281,-256,-221,-209,-186,-170]

x1 = [257, 300, 346, 370, 385, 391, 400, 414, 440, 459, 442, 400, 349, 290, 236, 223, 248, 265, 298, 330, 359, 377, 391, 416, 453, 504, 547, 577, 581, 578]
y1 = [-422,-395,-341,-292,-261,-233,-191,-150,-119, -90, -61, -48, -47, -34, -45, -98,-131,-146,-174,-199,-221,-241,-259,-286,-308,-333,-339,-308,-258,-240]

x2 = [289, 263, 254, 235, 256, 304, 349, 387, 397, 423, 436, 409, 352, 300, 250, 235, 224, 252, 267, 316, 354, 377, 396, 414, 433, 453, 500, 533, 565, 582, 585, 583]
y2 = [-105,-129,-147,-192,-224,-236,-227,-199,-185,-142, -97, -65, -51, -40, -45, -57, -96,-138,-150,-173,-183,-188,-199,-233,-279,-299,-329,-339,-331,-306,-263,-240]

x3 = [272, 248, 243, 230, 240, 268, 300, 334, 359, 371, 396, 423, 426, 436, 410, 359, 310, 264, 234, 218, 220, 241, 251, 274, 302, 351, 365, 402, 428, 449, 466, 466, 451, 430, 419, 393, 364, 340]
y3 = [-99,-127,-141,-180,-209,-229,-237,-231,-221,-207,-179,-144,-135,-100, -67, -53, -41, -38, -53, -78,-102,-137,-147,-171,-190,-208,-216,-241,-248,-244,-224,-196,-166,-141,-132,-124,-124,-125]

x4 = [ 556, 518, 474, 440, 424, 367, 316, 275, 247, 220, 164, 103,  63,  57,  71, 104, 155, 205, 233, 247, 297, 345, 380, 415, 442, 454, 465, 485, 502, 537, 567, 582, 591, 590, 576, 562]
y4 = [-191,-231,-248,-262,-272,-283,-279,-255,-234,-219,-197,-189,-202,-218,-239,-251,-251,-240,-235,-224,-215,-214,-228,-252,-281,-316,-358,-400,-416,-424,-410,-376,-333,-298,-259,-237]

x5 = [ 255, 286, 294, 326, 370, 380, 414, 431, 459, 480, 484, 473, 457, 446, 408, 381, 357, 335, 311, 298, 282, 263, 241, 226, 197, 156, 124, 102, 102, 118, 142, 173, 195, 213, 222, 229, 235, 250, 263, 286, 311, 348, 374, 388, 417, 444, 460, 484, 500, 512, 518];
y5 = [-183,-224,-233,-269,-312,-321,-348,-358,-352,-333,-305,-283,-267,-258,-231,-214,-206,-205,-211,-218,-230,-246,-264,-277,-284,-276,-263,-246,-230,-216,-211,-214,-226,-246,-260,-276,-286,-315,-333,-346,-347,-336,-323,-315,-293,-270,-263,-251,-233,-216,-200];

x6 = [ 186, 234, 249, 279, 304, 322, 332, 351, 364, 410, 419, 447, 465, 480, 492, 491, 475, 458, 441, 431, 407, 391, 367, 350, 311, 290, 261, 242, 231, 228, 235, 248, 261, 288, 320, 338, 340, 332, 323, 309, 299, 296, 294, 307, 329, 352, 379, 404, 417, 439, 440, 428];
y6 = [-159,-175,-179,-190,-204,-220,-231,-252,-262,-299,-309,-327,-326,-319,-300,-279,-253,-238,-230,-229,-231,-235,-246,-253,-266,-270,-272,-264,-247,-222,-197,-179,-171,-167,-175,-187,-204,-216,-223,-243,-266,-279,-318,-336,-353,-360,-353,-334, 423,-244,-288,-176];

x7 = [ 321, 362, 373, 384, 394, 437, 445, 458, 453, 434, 412, 388, 377, 366, 341, 338, 325, 316, 292, 273, 255, 240, 234, 237, 247, 266, 278, 307, 333, 344, 393, 400, 422, 440, 448, 444, 437, 368, 354, 321, 303, 286, 278, 277, 286, 314, 326, 371, 384, 432];
y7 = [-118,-156,-164,-182,-191,-232,-242,-266,-280,-290,-292,-287,-281,-274,-222,-208,-180,-168,-150,-146,-151,-164,-184,-204,-221,-233,-239,-236,-224,-217,-190,-189,-190,-199,-211,-225,-234,-273,-276,-275,-269,-257,-243,-226,-204,-181,-174,-163,-157,-143];

x8 = [341, 296, 273, 264, 262, 265, 286, 320, 353, 368, 400, 426, 452, 475, 506, 519, 510, 485, 455, 427, 416, 373, 341, 300, 275, 261, 230, 208, 202, 206, 226, 258, 291, 326, 360, 378, 401, 413, 419, 427, 468];
y8 = [-58, -89,-122,-150,-169,-183,-220,-241,-261,-273,-307,-330,-341,-344,-335,-317,-295,-266,-216,-186,-175,-158,-155,-159,-167,-172,-187,-208,-226,-250,-272,-283,-286,-280,-272,-263,-238,-204,-189,-179,-125];

x9 = [291, 376, 393, 418, 460, 507, 543, 580, 612, 622, 608, 587, 558, 526, 488, 437, 403, 374, 331, 289, 247, 218, 210, 224, 258, 294, 343, 369, 396, 470];
y9 = [-82,-228,-253,-315,-346,-362,-366,-354,-328,-310,-269,-238,-218,-214,-223,-237,-237,-236,-214,-201,-204,-224,-249,-278,-293,-297,-282,-260,-232,-159];

features = {'img10': {'V':list(),
                      'E':list()},
            'img1':  {'V':list(),
                      'E':list()},
            'img2':  {'V':list(),
                      'E':list()},
            'img3':  {'V':list(),
                      'E':list()},
            'img4':  {'V':list(),
                      'E':list()},
            'img5':  {'V':list(),
                      'E':list()},
            'img6':  {'V':list(),
                      'E':list()},
            'img7':  {'V':list(),
                      'E':list()},
            'img8':  {'V':list(),
                      'E':list()},
            'img9':  {'V':list(),
                      'E':list()}}

angles = list()

def dot(x1, y1, x2, y2):
    return x1*x2 + y1*y2

def norm(x,y):
    return math.sqrt(math.pow(x,2) + math.pow(y,2))

def lenEdge(x1, y1, x2, y2):
    return math.sqrt(math.pow(x2-x1, 2) + math.pow(y2-y1, 2))

def angle(x1, y1, x2, y2):
    angles.append(math.cos(math.degrees(math.acos(dot(x1, y1, x2, y2)/(norm(x1, y1)*norm(x2,y2))))))
    return math.cos(math.degrees(math.acos(dot(x1, y1, x2, y2)/(norm(x1, y1)*norm(x2,y2)))))

def diffAngles(angle1, angle2):
    return angle2 - angle1

def calcFeatures(x, y, img):
    global angles
    global features
    for i in range(len(x)):
        if i+1 < len(x):
            V = [1,angle(x[i], y[i], x[i+1], y[i+1]), math.pow(angle(x[i], y[i], x[i+1], y[i+1]),2)]
        else:
            V = [1,0,0]

        if i>0 and i+1 < len(x):
            E = [lenEdge(x[i], y[i], x[i+1], y[i+1]), math.pow(lenEdge(x[i], y[i], x[i+1], y[i+1]),2), diffAngles(angles[i-1], angles[i]), math.pow(diffAngles(angles[i-1], angles[i]),2)]
        elif i+1 < len(x):
            E = [lenEdge(x[i], y[i], x[i+1], y[i+1]), math.pow(lenEdge(x[i], y[i], x[i+1], y[i+1]),2), 0, 0]
        else:
            E = [0, 0, diffAngles(angles[i-1], angles[i]), math.pow(diffAngles(angles[i-1], angles[i]),2)]

        features[img]['V'].append(V)
        features[img]['E'].append(E)

calcFeatures(x10, y10, 'img10')
calcFeatures(x1, y1, 'img1')
calcFeatures(x2,y2,'img2')
calcFeatures(x3,y3,'img3')
calcFeatures(x4,y4,'img4')
calcFeatures(x4,y4,'img5')
calcFeatures(x4,y4,'img6')
calcFeatures(x4,y4,'img7')
calcFeatures(x4,y4,'img8')
calcFeatures(x4,y4,'img9')

with open('features.json', 'w') as fp:
    json.dump(features, fp)
